{join} = require "path"
fs = require "fs-extra"
{walk} = require "walk"
{spawnSync} = require "child_process"
appDir = join __dirname, "app"

task "bundle", "Compiles jade and coffee and bundles into single bundle.js file", ->
  invoke "style"
  spawnSync "jade", ["./"], stdio: "inherit"
  spawnSync "coffee", ["-c", "-b", "./"], stdio: "inherit"
  spawnSync "browserify", ["#{__dirname}/main.js", "-o", "#{appDir}/final.js"], stdio: "inherit"
    #spawnSync "uglifyjs", ["#{appDir}/bundle.js", "-o", "#{appDir}/final.js"], stdio: "inherit"
  style = join appDir, "style.css"
  index = join appDir, "index.html"
  styleContent = fs.readFileSync style, "utf8"
  indexContent = fs.readFileSync index, "utf8"
  styled = indexContent.replace "@@@", styleContent
  fs.writeFileSync index, styled, "utf8"

task "style", "Compiles all Stylus files into single CSS3 file", ->
  if not fs then invoke "install"
  console.log "Compiling all Stylus files and @angular-material.css into single CSS3 file..."
  stylus = require "stylus"
  nib = require "nib"
  uglify = require "uglifycss"
  styles = join __dirname, "styles"
  styl = join styles, "style.styl"
  stylContent = fs.readFileSync styl, "utf8"
  material = join __dirname, "node_modules/angular-material/angular-material.min.css"
  materialContent = fs.readFileSync material, "utf8"
  stylus stylContent
    .include styles
    .use nib()
    .render (cssErr, css) ->
      if cssErr then console.log cssErr
      cssFile = join appDir, "style.css"
      cssContent = "#{materialContent}\n#{css}"
      uglified = uglify.processString cssContent, maxLineLen: 0, expandVars: false, uglyComments:true, cuteComments: false
      fs.ensureFileSync cssFile
      fs.writeFileSync cssFile, uglified, "utf8"
  console.log "Compiling all Stylus files and @angular-material.css into single CSS3 file    done"
